{"remainingRequest":"I:\\MSB\\msb_ui\\hejiayun_ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!I:\\MSB\\msb_ui\\hejiayun_ui\\src\\layout\\components\\AppMain.vue?vue&type=style&index=1&lang=scss&","dependencies":[{"path":"I:\\MSB\\msb_ui\\hejiayun_ui\\src\\layout\\components\\AppMain.vue","mtime":1615183774631},{"path":"I:\\MSB\\msb_ui\\hejiayun_ui\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"I:\\MSB\\msb_ui\\hejiayun_ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"I:\\MSB\\msb_ui\\hejiayun_ui\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"I:\\MSB\\msb_ui\\hejiayun_ui\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"I:\\MSB\\msb_ui\\hejiayun_ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"I:\\MSB\\msb_ui\\hejiayun_ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi8vIGZpeCBjc3Mgc3R5bGUgYnVnIGluIG9wZW4gZWwtZGlhbG9nDQouZWwtcG9wdXAtcGFyZW50LS1oaWRkZW4gew0KICAuZml4ZWQtaGVhZGVyIHsNCiAgICBwYWRkaW5nLXJpZ2h0OiAxNXB4Ow0KICB9DQp9DQo="},{"version":3,"sources":["AppMain.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyJA;AACA;AACA;AACA;AACA;AACA","file":"AppMain.vue","sourceRoot":"src/layout/components","sourcesContent":["\r\n<template>\r\n  <section class=\"app-main\">\r\n    <transition name=\"fade-transform\" mode=\"out-in\">\r\n      <keep-alive :max=\"20\" :exclude=\"notCacheName\">\r\n        <router-view :key=\"key\" />\r\n      </keep-alive>\r\n    </transition>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nimport Global from \"@/layout/components/global.js\";\r\n\r\nexport default {\r\n  name: 'AppMain',\r\n  computed: {\r\n    notCacheName() {\r\n      var visitedViews = this.$store.state.tagsView.visitedViews;\r\n      var noCacheViews = [];\r\n      Object.keys(visitedViews).some((index) => {\r\n        if (visitedViews[index].meta.noCache) {\r\n          noCacheViews.push(visitedViews[index].name);\r\n        }\r\n      });\r\n      return noCacheViews;\r\n    },\r\n    key() {\r\n      return this.$route.path;\r\n    },\r\n  },\r\n  mounted() {\r\n    // 关闭标签触发\r\n    Global.$on(\"removeCache\", (name, view) => {\r\n      this.removeCache(name, view);\r\n    });\r\n  },\r\n  methods: {\r\n    // 获取有keep-alive子节点的Vnode\r\n    getVnode() {\r\n      // 判断子集非空\r\n      if (this.$children.length == 0) return false;\r\n      let vnode;\r\n      for (let item of this.$children) {\r\n        // 如果data中有key则代表找到了keep-alive下面的子集，这个key就是router-view上的key\r\n        if (item.$vnode.data.key) {\r\n          vnode = item.$vnode;\r\n          break;\r\n        }\r\n      }\r\n      return vnode ? vnode : false;\r\n    },\r\n    // 移除keep-alive缓存\r\n    removeCache(name, view = {}) {\r\n      let vnode = this.getVnode();\r\n      if (!vnode) return false;\r\n      let componentInstance = vnode.parent.componentInstance;\r\n      // 这个key是用来获取前缀用来后面正则匹配用的\r\n      let keyStart = vnode.key.split(\"/\")[0];\r\n      let thisKey = `${keyStart}${view.fullPath}`;\r\n      let regKey = `${keyStart}${view.path}`;\r\n\r\n      this[name]({ componentInstance, thisKey, regKey });\r\n    },\r\n    // 移除其他\r\n    closeOthersTags({ componentInstance, thisKey }) {\r\n      Object.keys(componentInstance.cache).forEach((key, index) => {\r\n        if (key != thisKey) {\r\n          // 销毁实例(这里存在多个key指向一个缓存的情况可能前面一个已经清除掉了所有要加判断)\r\n          if (componentInstance.cache[key]) {\r\n            componentInstance.cache[key].componentInstance.$destroy();\r\n          }\r\n          // 删除缓存\r\n          delete componentInstance.cache[key];\r\n          // 移除key中对应的key\r\n          componentInstance.keys.splice(index, 1);\r\n        }\r\n      });\r\n    },\r\n    // 移除所有缓存\r\n    closeAllTags({ componentInstance }) {\r\n      // 销毁实例\r\n      Object.keys(componentInstance.cache).forEach((key) => {\r\n        if (componentInstance.cache[key]) {\r\n          componentInstance.cache[key].componentInstance.$destroy();\r\n        }\r\n      });\r\n      // 删除缓存\r\n      componentInstance.cache = {};\r\n      // 移除key中对应的key\r\n      componentInstance.keys = [];\r\n    },\r\n    // 移除单个缓存\r\n    closeSelectedTag({ componentInstance, regKey }) {\r\n      let reg = new RegExp(`^${regKey}`);\r\n      Object.keys(componentInstance.cache).forEach((key, i) => {\r\n        if (reg.test(key)) {\r\n          // 销毁实例\r\n          if (componentInstance.cache[key]) {\r\n            componentInstance.cache[key].componentInstance.$destroy();\r\n          }\r\n          // 删除缓存\r\n          delete componentInstance.cache[key];\r\n          // 移除key中对应的key\r\n          componentInstance.keys.splice(i, 1);\r\n        }\r\n      });\r\n    },\r\n    // 刷新单个缓存\r\n    refreshSelectedTag({ componentInstance, thisKey }) {\r\n      Object.keys(componentInstance.cache).forEach((key, index) => {\r\n        if (null != thisKey && key.replace(\"/redirect\", \"\") == thisKey) {\r\n          // 1 销毁实例(这里存在多个key指向一个缓存的情况可能前面一个已经清除掉了所有要加判断)\r\n          if (componentInstance.cache[key]) {\r\n            componentInstance.cache[key].componentInstance.$destroy();\r\n          }\r\n          // 2 删除缓存\r\n          delete componentInstance.cache[key];\r\n          // 3 移除key中对应的key\r\n          componentInstance.keys.splice(index, 1);\r\n        }\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.app-main {\r\n  /* 50= navbar  50  */\r\n  min-height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.fixed-header + .app-main {\r\n  padding-top: 50px;\r\n}\r\n\r\n.hasTagsView {\r\n  .app-main {\r\n    /* 84 = navbar + tags-view = 50 + 34 */\r\n    min-height: calc(100vh - 84px);\r\n  }\r\n\r\n  .fixed-header + .app-main {\r\n    padding-top: 84px;\r\n  }\r\n}\r\n</style>\r\n\r\n<style lang=\"scss\">\r\n// fix css style bug in open el-dialog\r\n.el-popup-parent--hidden {\r\n  .fixed-header {\r\n    padding-right: 15px;\r\n  }\r\n}\r\n</style>\r\n"]}]}