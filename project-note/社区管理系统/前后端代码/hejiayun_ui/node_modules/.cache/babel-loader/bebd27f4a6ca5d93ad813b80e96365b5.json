{"remainingRequest":"I:\\MSB\\msb_ui\\hejiayun_ui\\node_modules\\babel-loader\\lib\\index.js!I:\\MSB\\msb_ui\\hejiayun_ui\\node_modules\\eslint-loader\\index.js??ref--13-0!I:\\MSB\\msb_ui\\hejiayun_ui\\src\\utils\\mashibing.js","dependencies":[{"path":"I:\\MSB\\msb_ui\\hejiayun_ui\\src\\utils\\mashibing.js","mtime":1684233926776},{"path":"I:\\MSB\\msb_ui\\hejiayun_ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"I:\\MSB\\msb_ui\\hejiayun_ui\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"I:\\MSB\\msb_ui\\hejiayun_ui\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmhhbmRsZVRyZWVBbGwgPSBoYW5kbGVUcmVlQWxsOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyIpOwoKLyoqDQogKiDpgJrnlKhqc+aWueazleWwgeijheWkhOeQhg0KICogYnkgamVldGhpbmsNCiAqLwp2YXIgYmFzZVVSTCA9IHByb2Nlc3MuZW52LlZVRV9BUFBfQkFTRV9BUEk7Ci8qKg0KICog5p6E6YCg5qCR5Z6L57uT5p6E5pWw5o2uDQogKiBAcGFyYW0geyp9IGRhdGEg5pWw5o2u5rqQDQogKiBAcGFyYW0geyp9IGlkIGlk5a2X5q61IOm7mOiupCAnaWQnDQogKiBAcGFyYW0geyp9IHBhcmVudElkIOeItuiKgueCueWtl+autSDpu5jorqQgJ3BhcmVudElkJw0KICogQHBhcmFtIHsqfSBjaGlsZHJlbiDlranlrZDoioLngrnlrZfmrrUg6buY6K6kICdjaGlsZHJlbicNCiAqIEBwYXJhbSB7Kn0gcm9vdElkIOaguUlkIOm7mOiupCAwDQogKi8KCmZ1bmN0aW9uIGhhbmRsZVRyZWVBbGwoZGF0YSwgaWQsIHBhcmVudElkLCBjaGlsZHJlbiwgcm9vdElkKSB7CiAgaWQgPSBpZCB8fCAnaWQnOwogIHBhcmVudElkID0gcGFyZW50SWQgfHwgJ3BhcmVudElkJzsKICBjaGlsZHJlbiA9IGNoaWxkcmVuIHx8ICdjaGlsZHJlbic7CiAgcm9vdElkID0gcm9vdElkIHx8IE1hdGgubWluLmFwcGx5KE1hdGgsIGRhdGEubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICByZXR1cm4gaXRlbVtwYXJlbnRJZF07CiAgfSkpIHx8IDA7IC8v5a+55rqQ5pWw5o2u5rex5bqm5YWL6ZqGCgogIHZhciBjbG9uZURhdGEgPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGRhdGEpKTsgLy/lvqrnjq/miYDmnInpobkKCiAgdmFyIHRyZWVEYXRhID0gY2xvbmVEYXRhLmZpbHRlcihmdW5jdGlvbiAoZmF0aGVyKSB7CiAgICB2YXIgYnJhbmNoQXJyID0gY2xvbmVEYXRhLmZpbHRlcihmdW5jdGlvbiAoY2hpbGQpIHsKICAgICAgLy/ov5Tlm57mr4/kuIDpobnnmoTlrZDnuqfmlbDnu4QKICAgICAgcmV0dXJuIGZhdGhlcltpZF0gPT09IGNoaWxkW3BhcmVudElkXTsKICAgIH0pOwogICAgYnJhbmNoQXJyLmxlbmd0aCA+IDAgPyBmYXRoZXIuY2hpbGRyZW4gPSBicmFuY2hBcnIgOiAnJzsgLy/ov5Tlm57nrKzkuIDlsYIKCiAgICByZXR1cm4gZmF0aGVyW3BhcmVudElkXSA9PT0gcm9vdElkOwogIH0pOwogIHJldHVybiB0cmVlRGF0YSAhPSAnJyA/IHRyZWVEYXRhIDogZGF0YTsKfQ=="},{"version":3,"sources":["I:/MSB/msb_ui/hejiayun_ui/src/utils/mashibing.js"],"names":["baseURL","process","env","VUE_APP_BASE_API","handleTreeAll","data","id","parentId","children","rootId","Math","min","apply","map","item","cloneData","JSON","parse","stringify","treeData","filter","father","branchArr","child","length"],"mappings":";;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA,IAAMA,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,gBAA5B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASC,aAAT,CAAuBC,IAAvB,EAA6BC,EAA7B,EAAiCC,QAAjC,EAA2CC,QAA3C,EAAqDC,MAArD,EAA6D;AACnEH,EAAAA,EAAE,GAAGA,EAAE,IAAI,IAAX;AACAC,EAAAA,QAAQ,GAAGA,QAAQ,IAAI,UAAvB;AACAC,EAAAA,QAAQ,GAAGA,QAAQ,IAAI,UAAvB;AACAC,EAAAA,MAAM,GAAGA,MAAM,IAAIC,IAAI,CAACC,GAAL,CAASC,KAAT,CAAeF,IAAf,EAAqBL,IAAI,CAACQ,GAAL,CAAS,UAAAC,IAAI,EAAI;AAAE,WAAOA,IAAI,CAACP,QAAD,CAAX;AAAuB,GAA1C,CAArB,CAAV,IAA+E,CAAxF,CAJmE,CAKnE;;AACA,MAAMQ,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeb,IAAf,CAAX,CAAlB,CANmE,CAOnE;;AACA,MAAMc,QAAQ,GAAGJ,SAAS,CAACK,MAAV,CAAiB,UAAAC,MAAM,EAAI;AAC3C,QAAIC,SAAS,GAAGP,SAAS,CAACK,MAAV,CAAiB,UAAAG,KAAK,EAAI;AACzC;AACA,aAAOF,MAAM,CAACf,EAAD,CAAN,KAAeiB,KAAK,CAAChB,QAAD,CAA3B;AACA,KAHe,CAAhB;AAIAe,IAAAA,SAAS,CAACE,MAAV,GAAmB,CAAnB,GAAuBH,MAAM,CAACb,QAAP,GAAkBc,SAAzC,GAAqD,EAArD,CAL2C,CAM3C;;AACA,WAAOD,MAAM,CAACd,QAAD,CAAN,KAAqBE,MAA5B;AACA,GARgB,CAAjB;AASA,SAAOU,QAAQ,IAAI,EAAZ,GAAiBA,QAAjB,GAA4Bd,IAAnC;AACA","sourcesContent":["/**\r\n * 通用js方法封装处理\r\n * by jeethink\r\n */\r\n\r\nconst baseURL = process.env.VUE_APP_BASE_API\r\n\r\n/**\r\n * 构造树型结构数据\r\n * @param {*} data 数据源\r\n * @param {*} id id字段 默认 'id'\r\n * @param {*} parentId 父节点字段 默认 'parentId'\r\n * @param {*} children 孩子节点字段 默认 'children'\r\n * @param {*} rootId 根Id 默认 0\r\n */\r\nexport function handleTreeAll(data, id, parentId, children, rootId) {\r\n\tid = id || 'id'\r\n\tparentId = parentId || 'parentId'\r\n\tchildren = children || 'children'\r\n\trootId = rootId || Math.min.apply(Math, data.map(item => { return item[parentId] })) || 0\r\n\t//对源数据深度克隆\r\n\tconst cloneData = JSON.parse(JSON.stringify(data))\r\n\t//循环所有项\r\n\tconst treeData = cloneData.filter(father => {\r\n\t\tlet branchArr = cloneData.filter(child => {\r\n\t\t\t//返回每一项的子级数组\r\n\t\t\treturn father[id] === child[parentId]\r\n\t\t});\r\n\t\tbranchArr.length > 0 ? father.children = branchArr : '';\r\n\t\t//返回第一层\r\n\t\treturn father[parentId] === rootId;\r\n\t});\r\n\treturn treeData != '' ? treeData : data;\r\n}\r\n"]}]}